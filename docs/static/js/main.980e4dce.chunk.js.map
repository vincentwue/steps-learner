{"version":3,"sources":["App.module.css","Controller.ts","App.tsx","index.tsx"],"names":["module","exports","keys","numbers","RandomController","_key","_number","_ignore","_onChange","Subject","_numberChangeInterval","_keyChangeInterval","_keyIntervalId","_numberIntervalId","this","nextNumber","nextKey","publish","startIntervals","keyInterval","numberInterval","undefined","window","clearInterval","console","log","state","setInterval","number","key","ignore","keyChangeInterval","numberChangeInterval","next","n","i","randomFromArray","filter","includes","k","arr","Math","floor","random","length","App","useState","setState","controller","hideNumber","setHideNumber","filterDurMoll","setFilterDurMoll","useEffect","onChange","subscribe","map","s","className","classes","ignored","included","ignoreButton","onClick","e","item","options","value","box","replace","flexcolumn","flexrow","name","id","parseFloat","target","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.980e4dce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1P9hb\",\"box\":\"App_box__22HXT\",\"ignore\":\"App_ignore__2SyIL\",\"ignoreButton\":\"App_ignoreButton__3bHMF\",\"included\":\"App_included__3gq1F\",\"number\":\"App_number__1CyVF\",\"key\":\"App_key__gfJ0-\",\"flexrow\":\"App_flexrow__i-Wbw\",\"flexcolumn\":\"App_flexcolumn__2p82a\"};","import { Subject } from \"rxjs\"\r\n\r\n\r\nexport const keys = [\r\n    \"C Dur\",\r\n    \"G Dur\",\r\n\r\n    \"Ab Dur\",\r\n    \"Eb Dur\",\r\n\r\n    \"D Moll\",\r\n    \"C Moll\",\r\n\r\n    \"F Dur\",\r\n    \"E Dur\",\r\n\r\n    \"A Moll\",\r\n\r\n\r\n    \"Bb Dur\",\r\n\r\n    \"E Moll\",\r\n\r\n    \"F Moll\",\r\n\r\n\r\n    \"G Moll\",\r\n\r\n    \"B Dur \",\r\n    \"G# Moll\",\r\n\r\n    \"A Dur \",\r\n    \"F# moll \",\r\n\r\n    \"Gb Dur\",\r\n    \"Eb Moll\",\r\n\r\n\r\n    \"C# Moll\",\r\n\r\n    \"Db Dur\",\r\n    \"Bb Moll\",\r\n]\r\n\r\nexport const numbers = [\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n    \"4\",\r\n    \"5\",\r\n    \"6\",\r\n    \"7\",\r\n]\r\n\r\nexport interface IState {\r\n    number: string\r\n    key: string\r\n    ignore: string[]\r\n    keyChangeInterval:number\r\n    numberChangeInterval:number\r\n}\r\n\r\nexport default class RandomController {\r\n\r\n    private _key = keys[1]\r\n    private _number = numbers[1]\r\n    private _ignore: string[] = [...keys]\r\n\r\n    private _onChange = new Subject<IState>()\r\n\r\n    private _numberChangeInterval: number = 2000\r\n    private _keyChangeInterval: number = 10000\r\n\r\n    constructor() {\r\n        this.nextNumber()\r\n        this.nextKey()\r\n        this.publish()\r\n        this.startIntervals(10000, 2000)\r\n    }\r\n\r\n    private _keyIntervalId: number | undefined\r\n    private _numberIntervalId: number | undefined\r\n\r\n    public startIntervals(keyInterval: number, numberInterval: number) {\r\n\r\n        if (this._numberIntervalId !== undefined) {\r\n            window.clearInterval(this._numberIntervalId)\r\n        }\r\n        if (this._keyIntervalId !== undefined) {\r\n            window.clearInterval(this._keyIntervalId)\r\n        }\r\n\r\n        \r\n        this._numberChangeInterval = numberInterval\r\n        this._keyChangeInterval = keyInterval\r\n        console.log(this.state)\r\n\r\n        this._keyIntervalId = window.setInterval(() => {\r\n            this.nextKey()\r\n        }, keyInterval)\r\n        this._numberIntervalId = window.setInterval(() => {\r\n            this.nextNumber()\r\n        }, numberInterval)\r\n\r\n        this.publish()\r\n\r\n    }\r\n\r\n\r\n    public get state() {\r\n        return {\r\n            number: this._number,\r\n            key: this._key,\r\n            ignore: this._ignore,\r\n            keyChangeInterval: this._keyChangeInterval,\r\n            numberChangeInterval: this._numberChangeInterval,\r\n        }\r\n    }\r\n\r\n    private publish() {\r\n        this._onChange.next(this.state)\r\n    }\r\n\r\n    public nextNumber() {\r\n        let n = \"0\"\r\n        let i = 0\r\n        while (n === \"0\" && i < 100) {\r\n            n = randomFromArray(numbers.filter(n => n !== this._number).filter(n => !this._ignore.includes(n)))\r\n            i++\r\n        }\r\n        this._number = n\r\n        this.publish()\r\n    }\r\n\r\n    public nextKey() {\r\n        let k = undefined\r\n        let i = 0\r\n        while (!k && i < 100) {\r\n            k = randomFromArray(keys.filter(n => n !== this._key).filter(n => !this._ignore.includes(n)))\r\n            i++\r\n        }\r\n        if (k) {\r\n            this._key = k\r\n            this.publish()\r\n        }\r\n    }\r\n\r\n    public get ignore() {\r\n        return this._ignore\r\n    }\r\n\r\n    public set ignore(arr: string[]) {\r\n        this._ignore = arr\r\n        this.publish()\r\n    }\r\n\r\n\r\n    public get onChange() {\r\n        return this._onChange\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction randomFromArray(arr: string[]) {\r\n    return arr[Math.floor((Math.random() * arr.length))];\r\n}","import React, { useEffect, useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport RandomController, { IState, keys, numbers } from './Controller';\r\nimport { classicNameResolver } from 'typescript';\r\n\r\nimport classes from \"./App.module.css\"\r\n\r\nfunction App() {\r\n\r\n  const [state, setState] = useState<IState>()\r\n\r\n  const [controller] = useState(new RandomController())\r\n\r\n  const [hideNumber, setHideNumber] = useState(false)\r\n  const [filterDurMoll, setFilterDurMoll] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setState(controller.state)\r\n    controller.onChange.subscribe(state => {\r\n      setState(state)\r\n    })\r\n  }, [controller, setState])\r\n\r\n  console.log(state)\r\n\r\n  const ignore = [...keys, ...numbers].map(s => <button\r\n    className={(state?.ignore.includes(s) ? classes.ignored : classes.included) + \" \" + classes.ignoreButton}\r\n    onClick={e => {\r\n      if (state) {\r\n\r\n        if (!state.ignore.includes(s)) {\r\n          controller.ignore = [...state.ignore, s]\r\n        } else {\r\n          controller.ignore = state.ignore.filter(item => item !== s)\r\n        }\r\n\r\n      }\r\n    }}>{s}</button>)\r\n\r\n  const options = [\r\n    <option value=\"500\">0.3 second</option>,\r\n    <option value=\"500\">0.4 second</option>,\r\n    <option value=\"500\">0.5 second</option>,\r\n    <option value=\"600\">0.6 second</option>,\r\n    <option value=\"700\">0.7 second</option>,\r\n    <option value=\"800\">0.8 second</option>,\r\n    <option value=\"900\">0.9 second</option>,\r\n    <option value=\"1000\">1 second</option>,\r\n    <option value=\"1000\">1 second</option>,\r\n    <option value=\"2000\">2 seconds</option>,\r\n    <option value=\"3000\">3 seconds</option>,\r\n    <option value=\"4000\">4 seconds</option>,\r\n    <option value=\"5000\">5 seconds</option>,\r\n    <option value=\"7000\">7 seconds</option>,\r\n    <option value=\"10000\">12 seconds</option>,\r\n    <option value=\"12000\">12 seconds</option>,\r\n    <option value=\"20000\">20 seconds</option>,\r\n    <option value=\"30000\">30 seconds</option>,\r\n  ]\r\n  return (\r\n    <div className=\"App\">\r\n      <div><button onClick={e => controller.nextKey()}>next key</button></div>\r\n\r\n\r\n      <div className={classes.box}>\r\n        <div className={classes.key}>{\r\n          !filterDurMoll ? state?.key\r\n          : state?.key.replace(\" Dur\", \"\").replace(\" Moll\", \"\")\r\n        }</div>\r\n        {!hideNumber &&\r\n          <div className={classes.number}>{state?.number}</div>\r\n\r\n        }\r\n      </div>\r\n\r\n  \r\n\r\n      <div>\r\n\r\n        <button onClick={e => {\r\n          setHideNumber(!hideNumber)\r\n        }}>hide number</button>\r\n      </div>\r\n      <div>\r\n\r\n        <button onClick={e => {\r\n          setFilterDurMoll(!filterDurMoll)\r\n        }}>filter dur moll</button>\r\n      </div>\r\n\r\n      <div><button onClick={e => {\r\n        if (state?.ignore.length === 0) {\r\n          controller.ignore = keys\r\n        } else {\r\n          controller.ignore = []\r\n        }\r\n      }}>all</button></div>\r\n\r\n      <div className={classes.ignore}>{ignore}</div>\r\n      <div className={classes.flexcolumn}>\r\n\r\n\r\n\r\n\r\n        <div className={classes.flexrow}>\r\n\r\n\r\n\r\n          key change interval:\r\n          <select name=\"keys\" id=\"keyID\"\r\n            onChange={e => {\r\n              controller.startIntervals(parseFloat(e.target.value), controller.state.numberChangeInterval)\r\n            }}>\r\n\r\n            <option value=\"10000\">10 seconds (standard)</option>\r\n\r\n            {options}\r\n\r\n          </select>\r\n        </div>\r\n\r\n        <div className={classes.flexrow}>\r\n\r\n\r\n\r\n          step change interval:\r\n          <select name=\"numbers\" id=\"numberID\" /* value={state?.numberChangeInterval.toString() && \"2000\"} */\r\n            onChange={e => {\r\n              controller.startIntervals(controller.state.keyChangeInterval, parseFloat(e.target.value))\r\n            }}>\r\n\r\n            <option value=\"2000\">2 seconds (standard)</option>\r\n\r\n            {options}\r\n\r\n          </select>\r\n        </div>\r\n\r\n        <div className={classes.flexrow}>\r\n\r\n\r\n          <a target=\"_blank\" href={\"https://github.com/vincentwue/steps-learner\"} >More information on Github</a>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}